{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import { Modal, Button } from 'react-bootstrap';\n// import axios from 'axios';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const CalendarComponent = () => {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [isModalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/events');\n//       console.log(response.data)\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleDateClick = (info) => {\n//     setModalOpen(true);\n//   };\n\n//   const handleEventClick = (info) => {\n//     setSelectedEvent(info.event);\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div>\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//         dateClick={handleDateClick}\n//         eventClick={handleEventClick}\n//       />\n\n//       <Modal show={isModalOpen} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\n//               {selectedEvent.location && <p>Location: {selectedEvent.location}</p>}\n\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default CalendarComponent;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import Modal from 'react-modal';\n\n// const localizer = momentLocalizer(moment);\n// const API_URL = 'http://localhost:5000/events'; // Update with your API URL\n\n// function App() {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get(API_URL);\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleEventClick = event => {\n//     setSelectedEvent(event);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500 }}\n//         onSelectEvent={handleEventClick}\n//       />\n//       <Modal\n//         isOpen={!!selectedEvent}\n//         onRequestClose={closeModal}\n//         contentLabel=\"Event Details\"\n//       >\n//         {selectedEvent && (\n//           <div>\n//             <h2>{selectedEvent.title}</h2>\n//             <p>Start: {selectedEvent.start}</p>\n//             <p>End: {selectedEvent.end}</p>\n//             <p>location: {selectedEvent.location}</p>\n//             <button onClick={closeModal}>Close</button>\n//           </div>\n//         )}\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import { Modal, Button } from 'react-bootstrap';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const localizer = momentLocalizer(moment);\n\n// function App() {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/events'); // API endpoint to fetch events\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleEventClick = event => {\n//     setSelectedEvent(event);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Calendar</h1>\n//       <Calendar\n//       localizer={localizer}\n//       events={events}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//       onSelectEvent={handleEventClick}\n//     />\n//       <Modal show={!!selectedEvent} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Event Details</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <h2>{selectedEvent.title}</h2>\n//               <p>Start: {selectedEvent.date}</p>\n//               <p>End: {selectedEvent.time}</p>\n//               <p>location: {selectedEvent.location}</p>\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst App = () => {\n  _s();\n  const views = ['month', 'agenda']; // Only include the 'month' view\n\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/events');\n      setEvents(response.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const handleEventClick = event => {\n    setSelectedEvent(event);\n  };\n  const closeModal = () => {\n    setSelectedEvent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calendar!!!!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        className: \"calendar\",\n        localizer: localizer,\n        events: events,\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 630\n        },\n        views: views\n        // onSelectEvent={handleEventClick}\n        ,\n        onSelectEvent: handleDateClick // Change to onSelectEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        size: \"lg\",\n        show: !!selectedDate,\n        onHide: closeModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Event Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"modal_box\",\n          children: selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedDate.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              responsive: true,\n              striped: true,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tamil Year\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tamil Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Tamil Ritu\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                style: {\n                  alignItems: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: selectedEvent.tamil_year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: selectedEvent.tamil_month\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: selectedEvent.tamil_ritu\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"KbW+g4Hsq7LsWSFUvkuBEaLEVeY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","momentLocalizer","moment","Modal","Button","Table","jsxDEV","_jsxDEV","localizer","App","_s","views","events","setEvents","selectedEvent","setSelectedEvent","fetchEvents","response","get","data","error","console","handleEventClick","event","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","style","height","onSelectEvent","handleDateClick","size","show","selectedDate","onHide","Header","closeButton","Title","Body","title","responsive","striped","alignItems","tamil_year","tamil_month","tamil_ritu","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import FullCalendar from '@fullcalendar/react';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const CalendarComponent = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/events');\r\n//       console.log(response.data)\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDateClick = (info) => {\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const handleEventClick = (info) => {\r\n//     setSelectedEvent(info.event);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setModalOpen(false);\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <FullCalendar\r\n//         plugins={[dayGridPlugin]}\r\n//         initialView=\"dayGridMonth\"\r\n//         events={events}\r\n//         dateClick={handleDateClick}\r\n//         eventClick={handleEventClick}\r\n//       />\r\n\r\n//       <Modal show={isModalOpen} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\r\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\r\n//               {selectedEvent.location && <p>Location: {selectedEvent.location}</p>}\r\n              \r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CalendarComponent;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\r\n// import moment from 'moment';\r\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\r\n// import Modal from 'react-modal';\r\n\r\n// const localizer = momentLocalizer(moment);\r\n// const API_URL = 'http://localhost:5000/events'; // Update with your API URL\r\n\r\n// function App() {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get(API_URL);\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEventClick = event => {\r\n//     setSelectedEvent(event);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Calendar\r\n//         localizer={localizer}\r\n//         events={events}\r\n//         startAccessor=\"start\"\r\n//         endAccessor=\"end\"\r\n//         style={{ height: 500 }}\r\n//         onSelectEvent={handleEventClick}\r\n//       />\r\n//       <Modal\r\n//         isOpen={!!selectedEvent}\r\n//         onRequestClose={closeModal}\r\n//         contentLabel=\"Event Details\"\r\n//       >\r\n//         {selectedEvent && (\r\n//           <div>\r\n//             <h2>{selectedEvent.title}</h2>\r\n//             <p>Start: {selectedEvent.start}</p>\r\n//             <p>End: {selectedEvent.end}</p>\r\n//             <p>location: {selectedEvent.location}</p>\r\n//             <button onClick={closeModal}>Close</button>\r\n//           </div>\r\n//         )}\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// App.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\r\n// import moment from 'moment';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const localizer = momentLocalizer(moment);\r\n\r\n// function App() {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/events'); // API endpoint to fetch events\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEventClick = event => {\r\n//     setSelectedEvent(event);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Calendar</h1>\r\n//       <Calendar\r\n//       localizer={localizer}\r\n//       events={events}\r\n//       startAccessor=\"start\"\r\n//       endAccessor=\"end\"\r\n//       style={{ height: 500 }}\r\n//       onSelectEvent={handleEventClick}\r\n//     />\r\n//       <Modal show={!!selectedEvent} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>Event Details</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <h2>{selectedEvent.title}</h2>\r\n//               <p>Start: {selectedEvent.date}</p>\r\n//               <p>End: {selectedEvent.time}</p>\r\n//               <p>location: {selectedEvent.location}</p>\r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './styles.css';\r\n\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst App = () => {\r\n\r\n  const views = ['month', 'agenda']; // Only include the 'month' view\r\n\r\n\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n   \r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    const fetchEvents = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/events');\r\n            setEvents(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching events:', error);\r\n        }\r\n    };\r\n\r\n    const handleEventClick = event => {\r\n        setSelectedEvent(event);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedEvent(null);\r\n    };\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"app\">\r\n          <div className='container'>\r\n            <h1>Calendar!!!!!!</h1>\r\n            <Calendar\r\n            className=\"calendar\"\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                style={{ height: 630 }}\r\n                views={views}\r\n                // onSelectEvent={handleEventClick}\r\n                onSelectEvent={handleDateClick} // Change to onSelectEvent\r\n            />\r\n            <Modal   size=\"lg\"  show={!!selectedDate} onHide={closeModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Event Details</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className='modal_box'>\r\n                {selectedDate && (\r\n                      <div className='container'>\r\n                          <h2>{selectedDate.title}</h2>\r\n\r\n                          <Table responsive striped>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Tamil Year</th>\r\n                            <th>Tamil Month</th>\r\n                            <th>Tamil Ritu</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody  style={{alignItems:'center'}}>\r\n                            <tr >\r\n                            <td>{selectedEvent.tamil_year}</td>\r\n                            <td>{selectedEvent.tamil_month}</td>\r\n                            <td>{selectedEvent.tamil_ritu}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </Table>\r\n\r\n                          {/* <Table responsive striped>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nakshatram</th>\r\n                            <th>Nakshatram time</th>\r\n                            <th>Yogam</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr >\r\n                            \r\n                            <td>{selectedEvent.nakshatra}</td>\r\n                            <td>{selectedEvent.nakshatra_starttime}</td>\r\n                            <td>{selectedEvent.yogam}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </Table>\r\n\r\n                          <Table responsive striped>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Raghu start/end time</th>\r\n                            <th>Yamakandam start/end time</th>\r\n                            <th>Gulikai start/end time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr >\r\n                            \r\n                            <td>{selectedEvent.rahukalam_starttime}</td>\r\n                            <td>{selectedEvent.yamakandam_starttime}</td>\r\n                            <td>{selectedEvent.gulikai_starttime}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        </Table> */}\r\n                          {/* <table className=\"table\">\r\n                              <tbody>\r\n                                 \r\n                                  <tr>\r\n                                      <td>Location:</td>\r\n                                      <td>{selectedEvent.location}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>raghu_start time:</td>\r\n                                      <td>{selectedEvent.raghu_starttime}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>raghu_end time:</td>\r\n                                      <td>{selectedEvent.rahukalam_endtime}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>yamakandam_start time:</td>\r\n                                      <td>{selectedEvent.yamakandam_starttime}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>yamakandam_end time:</td>\r\n                                      <td>{selectedEvent.yamakandam_endtime}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>yamakandam_end time:</td>\r\n                                      <td>{selectedEvent.yamakandam_endtime}</td>\r\n                                  </tr>\r\n                                  \r\n                                  <tr>\r\n                                      <td>Start:</td>\r\n                                      <td>{selectedEvent.start}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                      <td>End:</td>\r\n                                      <td>{selectedEvent.end}</td>\r\n                                  </tr>\r\n                              </tbody>\r\n                          </table> */}\r\n                           {/* <div className='container special_events'>\r\n                             <h3>Feburary Special days</h3>\r\n                          <div className='row' style={{padding:'5px'}}>\r\n                            <div className='col-md-4'>\r\n                            <p className='specal_days'>Feb 8: {selectedEvent.MahaShivaratri}</p>\r\n                            <p>Feb 9: {selectedEvent.Thiruvona_Vratham}</p>\r\n                           \r\n                            </div>\r\n                            <div className='col-md-4'>\r\n                            <p>Feb 9: {selectedEvent.Shula_Vratam}</p>\r\n                            <p>Feb 13: {selectedEvent.Ganesh_Jayanti_Chaturthi_Vratham}</p>\r\n                            </div>\r\n                            <div className='col-md-4'>\r\n                            <p>Feb 15: {selectedEvent.Shashti_Vratham}</p>\r\n                            <p>Feb 28:{selectedEvent.National_ScienceDay}</p>\r\n                            </div>\r\n                            </div>\r\n                            </div> */}\r\n                      </div>\r\n                  )}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={closeModal}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App; \r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}