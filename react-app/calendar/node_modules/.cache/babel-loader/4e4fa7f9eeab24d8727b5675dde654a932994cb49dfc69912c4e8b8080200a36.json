{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\";\n// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n\n// import { Modal, Button } from 'react-bootstrap';\n// import Table from 'react-bootstrap/Table';\n\n// import axios from 'axios';\n// import './styles.css'\n\n// const CalendarComponent = () => {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [isModalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleDateClick = (info) => {\n//     setModalOpen(true);\n//   };\n\n//   const handleEventClick = (info) => {\n//     setSelectedEvent(info.event);\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className='container'>\n//         <div className='row'>\n//             <div className='col-lg-12'>\n\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//         dateClick={handleDateClick}\n//         eventClick={handleEventClick}\n//       />\n\n//       <Modal show={isModalOpen} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//       </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CalendarComponent;\n\nimport React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tamilMonthNames = ['சனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'];\nconst renderMonthNames = ({\n  date\n}) => {\n  const englishMonthName = date.toLocaleString('en', {\n    month: 'long'\n  });\n  const tamilMonthName = tamilMonthNames[date.getMonth()];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"english\",\n      children: englishMonthName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tamil\",\n      children: tamilMonthName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\nconst CalendarComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      titleFormat: renderMonthNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","tamilMonthNames","renderMonthNames","date","englishMonthName","toLocaleString","month","tamilMonthName","getMonth","children","className","fileName","_jsxFileName","lineNumber","columnNumber","CalendarComponent","plugins","initialView","titleFormat","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import FullCalendar from '@fullcalendar/react';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import Table from 'react-bootstrap/Table';\r\n\r\n// import axios from 'axios';\r\n// import './styles.css'\r\n\r\n\r\n// const CalendarComponent = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDateClick = (info) => {\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const handleEventClick = (info) => {\r\n//     setSelectedEvent(info.event);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setModalOpen(false);\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='container'>\r\n//         <div className='row'>\r\n//             <div className='col-lg-12'>\r\n\r\n          \r\n\r\n//       <FullCalendar\r\n//         plugins={[dayGridPlugin]}\r\n//         initialView=\"dayGridMonth\"\r\n//         events={events}\r\n//         dateClick={handleDateClick}\r\n//         eventClick={handleEventClick}\r\n//       />\r\n\r\n//       <Modal show={isModalOpen} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\r\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//       </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CalendarComponent;\r\n\r\n\r\nimport React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\n\r\n\r\n\r\nconst tamilMonthNames = [\r\n  'சனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்',\r\n  'ஜூலை', 'ஆகஸ்ட்', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்'\r\n];\r\n\r\n\r\nconst renderMonthNames = ({ date }) => {\r\n  const englishMonthName = date.toLocaleString('en', { month: 'long' });\r\n  const tamilMonthName = tamilMonthNames[date.getMonth()];\r\n  return (\r\n    <div>\r\n      <span className=\"english\">{englishMonthName}</span>\r\n      <span className=\"tamil\">{tamilMonthName}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst CalendarComponent = () => {\r\n  return (\r\n    <div>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        titleFormat={renderMonthNames}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,eAAe,GAAG,CACtB,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EACrD,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAClE;AAGD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACrC,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,cAAc,CAAC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;EACrE,MAAMC,cAAc,GAAGN,eAAe,CAACE,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC;EACvD,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAMU,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAEL;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnDd,OAAA;MAAMU,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAEF;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAGD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,oBACEf,OAAA;IAAAS,QAAA,eACET,OAAA,CAACH,YAAY;MACXmB,OAAO,EAAE,CAAClB,aAAa,CAAE;MACzBmB,WAAW,EAAC,cAAc;MAC1BC,WAAW,EAAEhB;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAVIJ,iBAAiB;AAYvB,eAAeA,iBAAiB;AAAC,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}