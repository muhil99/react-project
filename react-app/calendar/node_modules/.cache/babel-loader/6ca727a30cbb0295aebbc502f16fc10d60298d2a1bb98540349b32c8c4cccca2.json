{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\";\n// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n// import { Modal, Button } from 'react-bootstrap';\n// import axios from 'axios';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const CalendarComponent = () => {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [isModalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/events');\n//       console.log(response.data)\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleDateClick = (info) => {\n//     setModalOpen(true);\n//   };\n\n//   const handleEventClick = (info) => {\n//     setSelectedEvent(info.event);\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div>\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//         dateClick={handleDateClick}\n//         eventClick={handleEventClick}\n//       />\n\n//       <Modal show={isModalOpen} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\n//               {selectedEvent.location && <p>Location: {selectedEvent.location}</p>}\n\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default CalendarComponent;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import Modal from 'react-modal';\n\n// const localizer = momentLocalizer(moment);\n// const API_URL = 'http://localhost:5000/events'; // Update with your API URL\n\n// function App() {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get(API_URL);\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleEventClick = event => {\n//     setSelectedEvent(event);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: 500 }}\n//         onSelectEvent={handleEventClick}\n//       />\n//       <Modal\n//         isOpen={!!selectedEvent}\n//         onRequestClose={closeModal}\n//         contentLabel=\"Event Details\"\n//       >\n//         {selectedEvent && (\n//           <div>\n//             <h2>{selectedEvent.title}</h2>\n//             <p>Start: {selectedEvent.start}</p>\n//             <p>End: {selectedEvent.end}</p>\n//             <p>location: {selectedEvent.location}</p>\n//             <button onClick={closeModal}>Close</button>\n//           </div>\n//         )}\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\n// import moment from 'moment';\n// import { Modal, Button } from 'react-bootstrap';\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const localizer = momentLocalizer(moment);\n\n// function App() {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/events'); // API endpoint to fetch events\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleEventClick = event => {\n//     setSelectedEvent(event);\n//   };\n\n//   const closeModal = () => {\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Calendar</h1>\n//       <Calendar\n//       localizer={localizer}\n//       events={events}\n//       startAccessor=\"start\"\n//       endAccessor=\"end\"\n//       style={{ height: 500 }}\n//       onSelectEvent={handleEventClick}\n//     />\n//       <Modal show={!!selectedEvent} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>Event Details</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <h2>{selectedEvent.title}</h2>\n//               <p>Start: {selectedEvent.date}</p>\n//               <p>End: {selectedEvent.time}</p>\n//               <p>location: {selectedEvent.location}</p>\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\n// Setup the localizer by providing the moment (or globalize, or Luxon) Object\n// to the correct localizer.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst MyCalendar = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"myCustomHeight\",\n  children: /*#__PURE__*/_jsxDEV(Calendar, {\n    localizer: localizer,\n    events: myEventsList,\n    startAccessor: \"start\",\n    endAccessor: \"end\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 230,\n  columnNumber: 3\n}, this);\n_c = MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","MyCalendar","props","className","children","events","myEventsList","startAccessor","endAccessor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import FullCalendar from '@fullcalendar/react';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import axios from 'axios';\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const CalendarComponent = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/events');\r\n//       console.log(response.data)\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDateClick = (info) => {\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const handleEventClick = (info) => {\r\n//     setSelectedEvent(info.event);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setModalOpen(false);\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <FullCalendar\r\n//         plugins={[dayGridPlugin]}\r\n//         initialView=\"dayGridMonth\"\r\n//         events={events}\r\n//         dateClick={handleDateClick}\r\n//         eventClick={handleEventClick}\r\n//       />\r\n\r\n//       <Modal show={isModalOpen} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\r\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\r\n//               {selectedEvent.location && <p>Location: {selectedEvent.location}</p>}\r\n              \r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CalendarComponent;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\r\n// import moment from 'moment';\r\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\r\n// import Modal from 'react-modal';\r\n\r\n// const localizer = momentLocalizer(moment);\r\n// const API_URL = 'http://localhost:5000/events'; // Update with your API URL\r\n\r\n// function App() {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get(API_URL);\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEventClick = event => {\r\n//     setSelectedEvent(event);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Calendar\r\n//         localizer={localizer}\r\n//         events={events}\r\n//         startAccessor=\"start\"\r\n//         endAccessor=\"end\"\r\n//         style={{ height: 500 }}\r\n//         onSelectEvent={handleEventClick}\r\n//       />\r\n//       <Modal\r\n//         isOpen={!!selectedEvent}\r\n//         onRequestClose={closeModal}\r\n//         contentLabel=\"Event Details\"\r\n//       >\r\n//         {selectedEvent && (\r\n//           <div>\r\n//             <h2>{selectedEvent.title}</h2>\r\n//             <p>Start: {selectedEvent.start}</p>\r\n//             <p>End: {selectedEvent.end}</p>\r\n//             <p>location: {selectedEvent.location}</p>\r\n//             <button onClick={closeModal}>Close</button>\r\n//           </div>\r\n//         )}\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// App.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Calendar, momentLocalizer } from 'react-big-calendar';\r\n// import moment from 'moment';\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import 'react-big-calendar/lib/css/react-big-calendar.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const localizer = momentLocalizer(moment);\r\n\r\n// function App() {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/events'); // API endpoint to fetch events\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEventClick = event => {\r\n//     setSelectedEvent(event);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Calendar</h1>\r\n//       <Calendar\r\n//       localizer={localizer}\r\n//       events={events}\r\n//       startAccessor=\"start\"\r\n//       endAccessor=\"end\"\r\n//       style={{ height: 500 }}\r\n//       onSelectEvent={handleEventClick}\r\n//     />\r\n//       <Modal show={!!selectedEvent} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>Event Details</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <h2>{selectedEvent.title}</h2>\r\n//               <p>Start: {selectedEvent.date}</p>\r\n//               <p>End: {selectedEvent.time}</p>\r\n//               <p>location: {selectedEvent.location}</p>\r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\n// Setup the localizer by providing the moment (or globalize, or Luxon) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\nconst MyCalendar = (props) => (\r\n  <div className=\"myCustomHeight\">\r\n    <Calendar\r\n      localizer={localizer}\r\n      events={myEventsList}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n    />\r\n  </div>\r\n)\r\n\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;;AAE3B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC,EAAC;;AAE1C,MAAMI,UAAU,GAAIC,KAAK,iBACvBH,OAAA;EAAKI,SAAS,EAAC,gBAAgB;EAAAC,QAAA,eAC7BL,OAAA,CAACJ,QAAQ;IACPK,SAAS,EAAEA,SAAU;IACrBK,MAAM,EAAEC,YAAa;IACrBC,aAAa,EAAC,OAAO;IACrBC,WAAW,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;AAAAC,EAAA,GATKZ,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}