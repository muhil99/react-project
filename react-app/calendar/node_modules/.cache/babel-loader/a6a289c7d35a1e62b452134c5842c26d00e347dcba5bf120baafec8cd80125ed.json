{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import FullCalendar from '@fullcalendar/react';\n// import dayGridPlugin from '@fullcalendar/daygrid';\n\n// import { Modal, Button } from 'react-bootstrap';\n// import Table from 'react-bootstrap/Table';\n\n// import axios from 'axios';\n// import './styles.css'\n\n// const CalendarComponent = () => {\n//   const [events, setEvents] = useState([]);\n//   const [selectedEvent, setSelectedEvent] = useState(null);\n//   const [isModalOpen, setModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/events');\n//       setEvents(response.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleDateClick = (info) => {\n//     setModalOpen(true);\n//   };\n\n//   const handleEventClick = (info) => {\n//     setSelectedEvent(info.event);\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//     setSelectedEvent(null);\n//   };\n\n//   return (\n//     <div className='container'>\n//         <div className='row'>\n//             <div className='col-lg-12'>\n\n//       <FullCalendar\n//         plugins={[dayGridPlugin]}\n//         initialView=\"dayGridMonth\"\n//         events={events}\n//         dateClick={handleDateClick}\n//         eventClick={handleEventClick}\n//       />\n\n//       <Modal show={isModalOpen} onHide={closeModal}>\n//         <Modal.Header closeButton>\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {selectedEvent && (\n//             <div>\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\n//             </div>\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={closeModal}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//       </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CalendarComponent;\n\nimport React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = () => {\n  _s();\n  const [locale, setLocale] = useState('en'); // Default locale is English\n\n  // Define month names in English and Tamil\n  const monthNames = {\n    en: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    ta: ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்டு', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்']\n  };\n\n  // Custom function to render month names based on the locale\n  const getMonthNames = () => {\n    return monthNames[locale];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLocale('en'),\n      children: \"English\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLocale('ta'),\n      children: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      locale: locale,\n      monthNamesShort: getMonthNames() // Pass custom month names\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"hjL1XJO2d1krOhdPXwMe9lERSvk=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","CalendarComponent","_s","locale","setLocale","monthNames","en","ta","getMonthNames","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","headerToolbar","left","center","right","monthNamesShort","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import FullCalendar from '@fullcalendar/react';\r\n// import dayGridPlugin from '@fullcalendar/daygrid';\r\n\r\n// import { Modal, Button } from 'react-bootstrap';\r\n// import Table from 'react-bootstrap/Table';\r\n\r\n// import axios from 'axios';\r\n// import './styles.css'\r\n\r\n\r\n// const CalendarComponent = () => {\r\n//   const [events, setEvents] = useState([]);\r\n//   const [selectedEvent, setSelectedEvent] = useState(null);\r\n//   const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/events');\r\n//       setEvents(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDateClick = (info) => {\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const handleEventClick = (info) => {\r\n//     setSelectedEvent(info.event);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const closeModal = () => {\r\n//     setModalOpen(false);\r\n//     setSelectedEvent(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='container'>\r\n//         <div className='row'>\r\n//             <div className='col-lg-12'>\r\n\r\n          \r\n\r\n//       <FullCalendar\r\n//         plugins={[dayGridPlugin]}\r\n//         initialView=\"dayGridMonth\"\r\n//         events={events}\r\n//         dateClick={handleDateClick}\r\n//         eventClick={handleEventClick}\r\n//       />\r\n\r\n//       <Modal show={isModalOpen} onHide={closeModal}>\r\n//         <Modal.Header closeButton>\r\n//           <Modal.Title>{selectedEvent ? selectedEvent.title : 'Event Details'}</Modal.Title>\r\n//         </Modal.Header>\r\n//         <Modal.Body>\r\n//           {selectedEvent && (\r\n//             <div>\r\n//               <p>Date: {selectedEvent.start.toLocaleDateString()}</p>\r\n//               <p>Time: {selectedEvent.start.toLocaleTimeString()}</p>\r\n//             </div>\r\n//           )}\r\n//         </Modal.Body>\r\n//         <Modal.Footer>\r\n//           <Button variant=\"secondary\" onClick={closeModal}>\r\n//             Close\r\n//           </Button>\r\n//         </Modal.Footer>\r\n//       </Modal>\r\n//       </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CalendarComponent;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\nconst CalendarComponent = () => {\r\n  const [locale, setLocale] = useState('en'); // Default locale is English\r\n\r\n  // Define month names in English and Tamil\r\n  const monthNames = {\r\n    en: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n    ta: ['ஜனவரி', 'பிப்ரவரி', 'மார்ச்', 'ஏப்ரல்', 'மே', 'ஜூன்', 'ஜூலை', 'ஆகஸ்டு', 'செப்டம்பர்', 'அக்டோபர்', 'நவம்பர்', 'டிசம்பர்']\r\n  };\r\n\r\n  // Custom function to render month names based on the locale\r\n  const getMonthNames = () => {\r\n    return monthNames[locale];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setLocale('en')}>English</button>\r\n      <button onClick={() => setLocale('ta')}>தமிழ்</button>\r\n\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        }}\r\n        locale={locale}\r\n        monthNamesShort={getMonthNames()} // Pass custom month names\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,UAAU,GAAG;IACjBC,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;IAC9HC,EAAE,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU;EAC/H,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAOH,UAAU,CAACF,MAAM,CAAC;EAC3B,CAAC;EAED,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAAC,IAAI,CAAE;MAAAK,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxDd,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMN,SAAS,CAAC,IAAI,CAAE;MAAAK,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtDd,OAAA,CAACJ,YAAY;MACXmB,OAAO,EAAE,CAAClB,aAAa,EAAEC,iBAAiB,CAAE;MAC5CkB,WAAW,EAAC,cAAc;MAC1BC,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT,CAAE;MACFjB,MAAM,EAAEA,MAAO;MACfkB,eAAe,EAAEb,aAAa,CAAC,CAAE,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACZ,EAAA,CAhCID,iBAAiB;AAAAqB,EAAA,GAAjBrB,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}