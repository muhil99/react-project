{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MyCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    fetchEvents(date);\n  };\n  const fetchEvents = async date => {\n    try {\n      const response = await fetch(`/api/events/${moment(date).format('YYYY-MM-DD')}`);\n      const data = await response.json();\n      setEvents(data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: [],\n      selectable: true,\n      onSelectSlot: handleDateClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: moment(selectedDate).format('MMMM Do, YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: event.title\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"blxntrUc2mB09smjp4bAyr1bH4Q=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","MyCalendar","_s","events","setEvents","selectedDate","setSelectedDate","handleDateClick","date","fetchEvents","response","fetch","format","data","json","error","console","children","selectable","onSelectSlot","fileName","_jsxFileName","lineNumber","columnNumber","className","map","event","title","id","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MyCalendar = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const handleDateClick = date => {\r\n    setSelectedDate(date);\r\n    fetchEvents(date);\r\n  };\r\n\r\n  const fetchEvents = async date => {\r\n    try {\r\n      const response = await fetch(`/api/events/${moment(date).format('YYYY-MM-DD')}`);\r\n      const data = await response.json();\r\n      setEvents(data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={[]}\r\n        selectable\r\n        onSelectSlot={handleDateClick}\r\n      />\r\n      {selectedDate && (\r\n        <div className=\"modal\">\r\n          <h2>{moment(selectedDate).format('MMMM Do, YYYY')}</h2>\r\n          <ul>\r\n            {events.map(event => (\r\n              <li key={event.id}>{event.title}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCalendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMa,eAAe,GAAGC,IAAI,IAAI;IAC9BF,eAAe,CAACE,IAAI,CAAC;IACrBC,WAAW,CAACD,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,WAAW,GAAG,MAAMD,IAAI,IAAI;IAChC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcd,MAAM,CAACW,IAAI,CAAC,CAACI,MAAM,CAAC,YAAY,CAAE,EAAC,CAAC;MAChF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCV,SAAS,CAACS,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrBG,MAAM,EAAE,EAAG;MACXe,UAAU;MACVC,YAAY,EAAEZ;IAAgB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EACDlB,YAAY,iBACXN,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAP,QAAA,gBACpBlB,OAAA;QAAAkB,QAAA,EAAKpB,MAAM,CAACQ,YAAY,CAAC,CAACO,MAAM,CAAC,eAAe;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvDxB,OAAA;QAAAkB,QAAA,EACGd,MAAM,CAACsB,GAAG,CAACC,KAAK,iBACf3B,OAAA;UAAAkB,QAAA,EAAoBS,KAAK,CAACC;QAAK,GAAtBD,KAAK,CAACE,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}