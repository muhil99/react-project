{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\n// Your modal component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/events');\n      const data = await response.json();\n      setEvents(data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const handleDateClick = info => {\n    const clickedDate = info.dateStr;\n    setSelectedDate(clickedDate);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const filteredEvents = events.filter(event => event.date === selectedDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Events Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      dateClick: handleDateClick,\n      events: events // Pass events data to the calendar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      events: filteredEvents,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/TGxdLyDwJn7lJQuR5xjQXI9nUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","App","_s","events","setEvents","selectedDate","setSelectedDate","showModal","setShowModal","fetchEvents","response","fetch","data","json","error","console","handleDateClick","info","clickedDate","dateStr","handleCloseModal","filteredEvents","filter","event","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","dateClick","Modal","onClose","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\n // Your modal component\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/events');\r\n      const data = await response.json();\r\n      setEvents(data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  const handleDateClick = (info) => {\r\n    const clickedDate = info.dateStr;\r\n    setSelectedDate(clickedDate);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const filteredEvents = events.filter(event => event.date === selectedDate);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Events Calendar</h1>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        dateClick={handleDateClick}\r\n        events={events} // Pass events data to the calendar\r\n      />\r\n      {showModal && <Modal events={filteredEvents} onClose={handleCloseModal} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AAChD;AACD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,SAAS,CAACQ,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAChCb,eAAe,CAACY,WAAW,CAAC;IAC5BV,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC7BZ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMa,cAAc,GAAGlB,MAAM,CAACmB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKnB,YAAY,CAAC;EAE1E,oBACEL,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB9B,OAAA,CAACH,YAAY;MACXkC,OAAO,EAAE,CAACjC,aAAa,CAAE;MACzBkC,WAAW,EAAC,cAAc;MAC1BC,SAAS,EAAEjB,eAAgB;MAC3Bb,MAAM,EAAEA,MAAO,CAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,EACDvB,SAAS,iBAAIP,OAAA,CAACkC,KAAK;MAAC/B,MAAM,EAAEkB,cAAe;MAACc,OAAO,EAAEf;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV;AAAC5B,EAAA,CA3CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}