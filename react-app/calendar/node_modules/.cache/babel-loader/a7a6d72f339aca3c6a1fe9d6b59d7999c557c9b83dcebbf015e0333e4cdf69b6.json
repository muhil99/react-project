{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-calendar\\\\calendar\\\\src\\\\calendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const handleEventClick = eventInfo => {\n    setSelectedEvent(eventInfo);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"fullCalendar\", {\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      events: YOUR_EVENTS_DATA // Replace with actual event data fetched from API\n      ,\n      eventClick: handleEventClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      event: selectedEvent,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"/Rhbd6JOwo26P//ByXpXRj6vmaU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Calendar","_s","selectedEvent","setSelectedEvent","modalOpen","setModalOpen","handleEventClick","eventInfo","handleCloseModal","children","plugins","dayGridPlugin","initialView","events","YOUR_EVENTS_DATA","eventClick","fileName","_jsxFileName","lineNumber","columnNumber","event","onClose","_c","$RefreshReg$"],"sources":["C:/react-calendar/calendar/src/calendarComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst Calendar = () => {\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleEventClick = (eventInfo) => {\r\n    setSelectedEvent(eventInfo);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <fullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={YOUR_EVENTS_DATA} // Replace with actual event data fetched from API\r\n        eventClick={handleEventClick}\r\n      />\r\n      {modalOpen && (\r\n        <Modal event={selectedEvent} onClose={handleCloseModal} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,gBAAgB,GAAIC,SAAS,IAAK;IACtCJ,gBAAgB,CAACI,SAAS,CAAC;IAC3BF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MACEW,OAAO,EAAE,CAACC,aAAa,CAAE;MACzBC,WAAW,EAAC,cAAc;MAC1BC,MAAM,EAAEC,gBAAiB,CAAC;MAAA;MAC1BC,UAAU,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACDf,SAAS,iBACRL,OAAA,CAACF,KAAK;MAACuB,KAAK,EAAElB,aAAc;MAACmB,OAAO,EAAEb;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}